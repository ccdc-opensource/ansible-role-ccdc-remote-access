---
- name: Install EPEL
  become: true
  ansible.builtin.package:
    name: epel-release
    state: present

- name: Install GNOME desktop group
  become: true
  ansible.builtin.dnf:
    name: "@Server with GUI"
    state: present
  register: gnome_group

- name: Set default to graphical.target
  become: true
  ansible.builtin.file:
    path: /etc/systemd/system/default.target
    state: link
    src: /usr/lib/systemd/system/graphical.target
  register: graphical_target

- name: Install xrdp, xorg backend and X11 helpers
  become: true
  ansible.builtin.package:
    name:
      - xrdp
      - xorgxrdp
      - xorg-x11-xauth
      - xorg-x11-xinit
    state: present

- name: Ensure startwm.sh uses /etc/X11/xinit/Xsession when present
  become: true
  ansible.builtin.lineinfile:
    path: /etc/xrdp/startwm.sh
    regexp: '^test -r /etc/X11/xinit/Xsession'
    line: 'test -r /etc/X11/xinit/Xsession && exec /etc/X11/xinit/Xsession'
    insertafter: '^test -r /etc/X11/Xsession.*'
    state: present
    create: no
    backup: yes
  register: startwm_xsession

- name: Add GNOME fallback to startwm.sh
  become: true
  ansible.builtin.blockinfile:
    path: /etc/xrdp/startwm.sh
    marker: "# {mark} XRDP GNOME FALLBACK"
    insertafter: EOF
    block: |
      if command -v gnome-session >/dev/null 2>&1; then
        export GNOME_SHELL_SESSION_MODE=classic
        export XDG_SESSION_DESKTOP=GNOME
        export XDG_CURRENT_DESKTOP=GNOME
        exec gnome-session
      fi
      exec /usr/bin/xterm
  register: startwm_fallback
  mode: '0755'

- name: Enable and start xrdp service
  become: true
  ansible.builtin.service:
    name: xrdp
    state: started
    enabled: true

- name: Restart xrdp if startwm.sh changed
  become: true
  ansible.builtin.service:
    name: xrdp
    state: restarted
  when: startwm_xsession.changed or startwm_fallback.changed

- name: Install firewalld
  become: true
  ansible.builtin.package:
    name: firewalld
    state: present

- name: Enable and start firewalld
  become: true
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Check if firewalld is active
  become: true
  ansible.builtin.command: systemctl is-active firewalld
  register: firewalld_state
  changed_when: false
  failed_when: false

- name: Open RDP in firewalld
  become: true
  ansible.posix.firewalld:
    service: rdp
    permanent: true
    state: enabled
    immediate: "{{ firewalld_state.stdout == 'active' }}"

- name: Install SELinux utils and xrdp policy
  become: true
  ansible.builtin.package:
    name:
      - policycoreutils-python-utils
      - xrdp-selinux
    state: present

- name: List SELinux booleans
  become: true
  ansible.builtin.command: semanage boolean -l
  register: sebools
  changed_when: false
  failed_when: sebools.rc != 0
  when: ansible_selinux.status == "enabled"

- name: Allow xrdp to connect to unreserved ports (if supported)
  become: true
  ansible.posix.seboolean:
    name: xrdp_connect_all_unreserved_ports
    state: true
    persistent: true
  when:
    - ansible_selinux.status == "enabled"
    - sebools.stdout is defined
    - "'xrdp_connect_all_unreserved_ports' in sebools.stdout"

- name: Wait for xrdp to listen on 3389
  ansible.builtin.wait_for:
    port: 3389
    timeout: 30
    state: started

- name: Reboot if GUI was newly installed or default target changed
  become: true
  ansible.builtin.reboot:
  when: gnome_group.changed or graphical_target.changed
