---
- name: Install EPEL
  become: true
  ansible.builtin.package:
    name: epel-release
    state: present

- name: Install GNOME desktop group
  become: true
  ansible.builtin.dnf:
    name: "@Server with GUI"
    state: present

- name: Set default.target to graphical.target
  become: true
  ansible.builtin.file:
    path: /etc/systemd/system/default.target
    state: link
    src: /usr/lib/systemd/system/graphical.target

- name: Install XRDP and Xorg
  become: true
  ansible.builtin.package:
    name:
      - xrdp
      - xorgxrdp
      - xorg-x11-server-Xorg
      - xorg-x11-xauth
      - xorg-x11-xinit
      - dbus-x11
      - gnome-session
      - gnome-shell
      - gnome-classic-session
      - xterm
    state: present

- name: Write /etc/xrdp/startwm.sh
  become: true
  ansible.builtin.copy:
    dest: /etc/xrdp/startwm.sh
    mode: '0755'
    content: |
      #!/bin/sh
      [ -r /etc/profile ] && . /etc/profile

      export XDG_SESSION_TYPE=x11
      export GNOME_SHELL_SESSION_MODE=classic
      export XDG_SESSION_DESKTOP=GNOME
      export XDG_CURRENT_DESKTOP=GNOME

      if command -v dbus-launch >/dev/null 2>&1; then
        exec dbus-launch --exit-with-session gnome-session --session=gnome-classic --disable-acceleration-check
      fi

      if command -v gnome-session >/dev/null 2>&1; then
        exec gnome-session --session=gnome-classic --disable-acceleration-check
      fi

      [ -r /etc/X11/xinit/Xsession ] && exec /etc/X11/xinit/Xsession
      [ -r /etc/X11/Xsession ] && exec /etc/X11/Xsession
      exec /usr/bin/xterm

- name: Ensure Xorg in /etc/xrdp/sesman.ini
  become: true
  ansible.builtin.blockinfile:
    path: /etc/xrdp/sesman.ini
    marker: "; {mark} MANAGED XORG SESMAN"
    insertafter: EOF
    block: |
      [Xorg]
      param=/usr/libexec/Xorg
      param=-noreset
      param=-nolisten
      param=tcp
      param=-logfile
      param=.xorgxrdp.%s.log
  register: sesman_xorg

- name: Point sesman to startwm.sh as the default
  become: true
  ansible.builtin.ini_file:
    path: /etc/xrdp/sesman.ini
    section: Globals
    option: DefaultWindowManager
    value: /etc/xrdp/startwm.sh
    backup: true
  register: sesman_default

- name: Ensure Xorg in xrdp.ini
  become: true
  ansible.builtin.blockinfile:
    path: /etc/xrdp/xrdp.ini
    marker: "; {mark} MANAGED XORG SESSION"
    insertafter: EOF
    block: |
      [Xorg]
      name=Xorg
      username=ask
      password=ask
  register: xrdp_ini_xorg

- name: Ensure xrdp lib dirs exist
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /usr/lib64/xrdp
    - /usr/lib/xrdp

- name: Locate xorgxrdp module (64-bit)
  become: true
  ansible.builtin.stat:
    path: /usr/lib64/xorg/modules/libxorgxrdp.so
  register: xorg_mod64

- name: Locate xorgxrdp module (32-bit)
  become: true
  ansible.builtin.stat:
    path: /usr/lib/xorg/modules/libxorgxrdp.so
  register: xorg_mod32

- name: Symlink libxorgxrdp.so into /usr/lib64/xrdp
  become: true
  ansible.builtin.file:
    src: /usr/lib64/xorg/modules/libxorgxrdp.so
    dest: /usr/lib64/xrdp/libxorgxrdp.so
    state: link
  when: xorg_mod64.stat.exists
  register: link_xorg_64

- name: Symlink libxorgxrdp.so into /usr/lib/xrdp
  become: true
  ansible.builtin.file:
    src: /usr/lib/xorg/modules/libxorgxrdp.so
    dest: /usr/lib/xrdp/libxorgxrdp.so
    state: link
  when: not xorg_mod64.stat.exists and xorg_mod32.stat.exists
  register: link_xorg_32

- name: Detect absolute lib path for Xorg
  ansible.builtin.set_fact:
    xorg_lib_path: >-
      {{ '/usr/lib64/xrdp/libxorgxrdp.so' if xorg_mod64.stat.exists
         else '/usr/lib/xrdp/libxorgxrdp.so' }}

- name: Set lib to libxorgxrdp.so in Xorg
  become: true
  ansible.builtin.ini_file:
    path: /etc/xrdp/xrdp.ini
    section: Xorg
    option: lib
    value: "{{ xorg_lib_path }}"
  register: xorg_lib_line

- name: Ensure port=-1 in Xorg
  become: true
  ansible.builtin.ini_file:
    path: /etc/xrdp/xrdp.ini
    section: Xorg
    option: port
    value: "-1"
  register: xorg_port_line

- name: Remove ip from Xorg
  become: true
  ansible.builtin.ini_file:
    path: /etc/xrdp/xrdp.ini
    section: Xorg
    option: ip
    state: absent
  register: xorg_ip_absent

- name: Ensure code=20 in [Xorg]
  become: true
  ansible.builtin.ini_file:
    path: /etc/xrdp/xrdp.ini
    section: Xorg
    option: code
    value: "20"
  register: xorg_code_line

- name: Disable Xvnc
  become: true
  ansible.builtin.replace:
    path: /etc/xrdp/xrdp.ini
    regexp: '(?ms)^\[Xvnc\]\n.*?(?=^\[|$\Z)'
    replace: '; [Xvnc] disabled by Ansible\n'
    backup: true
  register: xrdp_disable_xvnc

- name: Enable and start xrdp
  become: true
  ansible.builtin.service:
    name: xrdp
    state: started
    enabled: true

- name: Restart xrdp if config changed
  become: true
  ansible.builtin.service:
    name: xrdp
    state: restarted
  when: >
    sesman_xorg.changed or
    xrdp_ini_xorg.changed or
    xorg_lib_line.changed or
    xorg_port_line.changed or
    xorg_ip_absent.changed or
    xorg_code_line.changed or
    xrdp_disable_xvnc.changed or
    sesman_default.changed or
    link_xorg_64.changed | default(false) or
    link_xorg_32.changed | default(false)

- name: Gather service facts
  ansible.builtin.service_facts:

- name: Allow 3389/tcp in firewalld when running
  become: true
  ansible.posix.firewalld:
    service: rdp
    state: enabled
    permanent: true
    immediate: true
  when:
    - "'firewalld.service' in ansible_facts.services"
    - ansible_facts.services['firewalld.service'].state == 'running'

- name: Wait for xrdp to listen on 3389
  ansible.builtin.wait_for:
    port: 3389
    timeout: 30
    state: started

- name: Install SELinux utils/policy
  become: true
  ansible.builtin.package:
    name:
      - policycoreutils-python-utils
      - xrdp-selinux
    state: present
