---
- name: Install EPEL
  become: true
  ansible.builtin.package:
    name: epel-release
    state: present

- name: Install GNOME desktop group
  become: true
  ansible.builtin.dnf:
    name: "@Server with GUI"
    state: present

- name: Set default to graphical.target
  become: true
  ansible.builtin.file:
    path: /etc/systemd/system/default.target
    state: link
    src: /usr/lib/systemd/system/graphical.target

- name: Install xrdp, xorg backend and X11 helpers
  become: true
  ansible.builtin.package:
    name:
      - xrdp
      - xorgxrdp
      - xorg-x11-xauth
      - xorg-x11-xinit
    state: present

- name: Stat /etc/xrdp/startwm.sh
  become: true
  ansible.builtin.stat:
    path: /etc/xrdp/startwm.sh
  register: startwm_stat

- name: Create /etc/xrdp/startwm.sh with a sane default if missing
  become: true
  ansible.builtin.copy:
    dest: /etc/xrdp/startwm.sh
    mode: '0755'
    content: |
      #!/bin/sh
      # Minimal XRDP session launcher for Rocky/RHEL
      # Load system profile if present
      [ -r /etc/profile ] && . /etc/profile

      # Prefer the RHEL/Rocky Xsession path, then Debian-style path
      if [ -r /etc/X11/xinit/Xsession ]; then
        exec /etc/X11/xinit/Xsession
      fi
      if [ -r /etc/X11/Xsession ]; then
        exec /etc/X11/Xsession
      fi

      # GNOME fallback
      if command -v gnome-session >/dev/null 2>&1; then
        export GNOME_SHELL_SESSION_MODE=classic
        export XDG_SESSION_DESKTOP=GNOME
        export XDG_CURRENT_DESKTOP=GNOME
        exec gnome-session
      fi

      # Last resort
      exec /usr/bin/xterm
  when: not startwm_stat.stat.exists

- name: Enable and start xrdp service
  become: true
  ansible.builtin.service:
    name: xrdp
    state: started
    enabled: true

- name: Install firewalld
  become: true
  ansible.builtin.package:
    name: firewalld
    state: present

- name: Enable and start firewalld
  become: true
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Check if firewalld is active
  become: true
  ansible.builtin.command: systemctl is-active firewalld
  register: firewalld_state
  changed_when: false
  failed_when: false

- name: Open RDP in firewalld
  become: true
  ansible.posix.firewalld:
    service: rdp
    permanent: true
    state: enabled
    immediate: "{{ firewalld_state.stdout == 'active' }}"

- name: Install SELinux utils and xrdp policy
  become: true
  ansible.builtin.package:
    name:
      - policycoreutils-python-utils
      - xrdp-selinux
    state: present

- name: List SELinux booleans
  become: true
  ansible.builtin.command: semanage boolean -l
  register: sebools
  changed_when: false
  failed_when: sebools.rc != 0
  when: ansible_selinux.status == "enabled"

- name: Allow xrdp to connect to unreserved ports (if supported)
  become: true
  ansible.posix.seboolean:
    name: xrdp_connect_all_unreserved_ports
    state: true
    persistent: true
  when:
    - ansible_selinux.status == "enabled"
    - sebools.stdout is defined
    - "'xrdp_connect_all_unreserved_ports' in sebools.stdout"
